<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <AssemblyName>Sharpnado.TaskLoaderView</AssemblyName>
    <TargetFramework>netstandard2.0</TargetFramework>
    <CodeAnalysisRuleSet>StyleCopRules.ruleset</CodeAnalysisRuleSet>
    <RootNamespace>Sharpnado.Presentation.Forms</RootNamespace>

    <Product>$(AssemblyName) ($(TargetFramework))</Product>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyFileVersion>2.0.0.0</AssemblyFileVersion>
    <Version>2.0.0.0</Version>
    <PackOnBuild>true</PackOnBuild>
    <NeutralLanguage>en</NeutralLanguage>

    <UseFullSemVerForNuGet>false</UseFullSemVerForNuGet>

    <LangVersion>latest</LangVersion>

    <PackageProjectUrl>https://github.com/roubachof/Sharpnado.TaskLoaderView</PackageProjectUrl>
    <RepositoryUrl>https://github.com/roubachof/Sharpnado.TaskLoaderView</RepositoryUrl>
    <PackageTags>xamarin, xamarin.forms, skeleton, loading, states, async, task, loader, isbusy, control, taskloader, taskloadernotifier</PackageTags>

    <Title>TaskLoaderView: free yourself from IsBusy=true!</Title>
    <Summary>Free yourself from IsBusy=true! The `TaskLoaderView` is a UI component that handles all your UI loading state (Loading, Error, Result, Notification), and removes all the pain of async loading from your view models (try catch / async void / IsBusy / HasErrors / base view models / ...) thanks to its brother the `TaskLoaderNotifier`.</Summary>
    <Description>Free yourself from IsBusy=true! 
The `TaskLoaderView` is a UI component that handles all your UI loading state (Loading, Error, Result, Notification), and removes all the pain of async loading from your view models (try catch / async void / IsBusy / HasErrors / base view models / ...) thanks to its brother the `TaskLoaderNotifier`.

Featuring:

* Default views for all loading states (Loading, Error, Success, Notification, Refresh)
* Stylable views including fonts, accent color, error images, ...
* Any states are overridable with user custom views and easily positionned with AbsoluteLayout properties
* Support for Xamarin.Forms.Skeleton nuget package
* Support for refresh scenarios, and error while refreshing with the ErrorNotificationView
* Supports loading task on demand with the NotStarted state
* TaskLoaderNotifier for the ViewModel side taking care of all the error handling and the IsBusy nonsense</Description>

    <Owners>Jean-Marie Alfonsi</Owners>
    <Authors>Jean-Marie Alfonsi</Authors>
    <Copyright>Copyright 2020 Sharpnado</Copyright>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Sharpnado.TaskMonitor" Version="1.0.0" />
    <PackageReference Include="StyleCop.Analyzers" Version="1.2.0-beta.113">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Xamarin.Forms" Version="3.4.0.33328" />
  </ItemGroup>

  <ItemGroup>
    <None Update="TaskLoaderView.xaml">
      <Generator>MSBuild:Compile</Generator>
    </None>
  </ItemGroup>

</Project>
